/*
 * dummy_gabarit_version_etudiante.cpp
 *
 *  Created on: Jun 08, 2016
 *      Author: chaj1907, micj1901
 */


//aucun include externe local autre que la librairie boost (déjà installée) ou
//les include standard n'est permis. Tout doit tenir dans ce fichier. 
//Si vous utilisez une librairie externe le code source doit tenir ici.
#include <cstdint>
#include <iostream>
#include "image_processing_plugin.h"
using namespace std;


//Modifiez cette classe-ci, vous pouvez faire littéralement ce que vous voulez y compris la renommer
//à condition de faire un "replace all"
//à condition de conserver le constructeur par défaut et aucun autre
//le destructeur virtuel
//et à condition que vous conserviez les 2 fonctions publiques virtuelles telles quelles.
class DummyImageProcessingPlugin : public ImageProcessingPlugin
{
public:
	DummyImageProcessingPlugin(); 			//vous devez utiliser ce constructeur et aucun autre
	virtual ~DummyImageProcessingPlugin();
	
	/*! \brief Receive an image to process.
	 *
	 *  This function will be called every time we need the to send the X,Y position and differentials to
	 *  the **firmware**.
	 *
	 *  \param in_ptrImage Image data.
	 *  \param in_unWidth Image width (= 480).
	 *  \param in_unHeight Image height (= 480).
	 *  \param out_dXPos X coordinate (sub-)pixel position of the ball.
	 *  \param out_dYPos Y coordinate (sub-)pixel position of the ball.
	 *
	 */
	virtual void OnImage(const boost::shared_array<uint8_t> in_ptrImage, unsigned int in_unWidth, unsigned int in_unHeight,
			double & out_dXPos, double & out_dYPos);

			
			
	/*! \brief Receive an image to process.
	 *
	 *  This function will be called every time we need the to send the X,Y position and differentials to
	 *  the **firmware**.
	 *
	 *  \param in_dXPos X coordinate position of the ball in <arbitrary input units.
	 *  \param in_dYPos Y coordinate position of the ball.
	 *  \param out_dXDiff X speed of the ball in <input units> per second.
	 *  \param out_dYDiff Y speed of the ball in <input units> per second.
	 *
	 */
	virtual void OnBallPosition(double in_dXPos, double in_dYPos, double & out_dXDiff, double & out_dYDiff);

private:
	#define SIZE_BILLE 22


	// Cree la nouvelle image du plateau, normalisée entre 0 et 1, paddé aux dimensions requises
	float* PlateauNormPad(const boost::shared_array<uint8_t> in_ptrImage, unsigned int inWidth, unsigned int inHeight, unsigned int cropWidth, unsigned int cropHeight, unsigned int cropX, unsigned int cropY, unsigned int outWidth,unsigned int outHeight);

	const float BilleNorm[SIZE_BILLE][SIZE_BILLE] = { 	{	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.249586776859504,	0.249586776859504,	0.0613514827418568,	0.0613514827418568,	0.143704423918327,	0.143704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327},										
														{	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.249586776859504,	0.249586776859504,	0.0613514827418568,	0.0613514827418568,	0.143704423918327,	0.143704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327},
														{	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.182920110192837,	0.182920110192837,	-0.397472046669908,	-0.397472046669908,	-0.440609301571869,	-0.440609301571869,	-0.401393615297359,	-0.401393615297359,	-0.424923027062065,	-0.424923027062065,	-0.389628909415006,	-0.389628909415006,	-0.224923027062065,	-0.224923027062065,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327},
														{	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.182920110192837,	0.182920110192837,	-0.397472046669908,	-0.397472046669908,	-0.440609301571869,	-0.440609301571869,	-0.401393615297359,	-0.401393615297359,	-0.424923027062065,	-0.424923027062065,	-0.389628909415006,	-0.389628909415006,	-0.224923027062065,	-0.224923027062065,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327},
														{	0.343704423918327,	0.343704423918327,	0.171155404310484,	0.171155404310484,	-0.444530870199320,	-0.444530870199320,	-0.487668125101281,	-0.487668125101281,	-0.464138713336575,	-0.464138713336575,	-0.397472046669908,	-0.397472046669908,	-0.440609301571869,	-0.440609301571869,	-0.0680602819640256,	-0.0680602819640256,	-0.432766164316967,	-0.432766164316967,	-0.326883811375790,	-0.326883811375790,	0.343704423918327,	0.343704423918327},
														{	0.343704423918327,	0.343704423918327,	0.171155404310484,	0.171155404310484,	-0.444530870199320,	-0.444530870199320,	-0.487668125101281,	-0.487668125101281,	-0.464138713336575,	-0.464138713336575,	-0.397472046669908,	-0.397472046669908,	-0.440609301571869,	-0.440609301571869,	-0.0680602819640256,	-0.0680602819640256,	-0.432766164316967,	-0.432766164316967,	-0.326883811375790,	-0.326883811375790,	0.343704423918327,	0.343704423918327},
														{	0.343704423918327,	0.343704423918327,	-0.299432830983633,	-0.299432830983633,	-0.385707340787555,	-0.385707340787555,	-0.322962242748339,	-0.322962242748339,	-0.138648517258143,	-0.138648517258143,	-0.126883811375790,	-0.126883811375790,	-0.268060281964026,	-0.268060281964026,	-0.319040674120888,	-0.319040674120888,	-0.417079889807163,	-0.417079889807163,	-0.471981850591477,	-0.471981850591477,	-0.0445308701993197,	-0.0445308701993197},
														{	0.343704423918327,	0.343704423918327,	-0.299432830983633,	-0.299432830983633,	-0.385707340787555,	-0.385707340787555,	-0.322962242748339,	-0.322962242748339,	-0.138648517258143,	-0.138648517258143,	-0.126883811375790,	-0.126883811375790,	-0.268060281964026,	-0.268060281964026,	-0.319040674120888,	-0.319040674120888,	-0.417079889807163,	-0.417079889807163,	-0.471981850591477,	-0.471981850591477,	-0.0445308701993197,	-0.0445308701993197},
														{	0.084880894506563,	0.084880894506563,	0.022135796467347,	0.022135796467347,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.0927240317614646,	0.0927240317614646,	0.343704423918327,	0.343704423918327,	0.0417436396046018,	0.0417436396046018,	-0.330805380003241,	-0.330805380003241,	-0.322962242748339,	-0.322962242748339},
														{	0.084880894506563,	0.084880894506563,	0.022135796467347,	0.022135796467347,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.0927240317614646,	0.0927240317614646,	0.343704423918327,	0.343704423918327,	0.0417436396046018,	0.0417436396046018,	-0.330805380003241,	-0.330805380003241,	-0.322962242748339,	-0.322962242748339},
														{	-0.173942634905202,	-0.173942634905202,	-0.075903419218928,	-0.075903419218928,	0.222135796467347,	0.222135796467347,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	-0.0915896937287315,	-0.0915896937287315},
														{	-0.173942634905202,	-0.173942634905202,	-0.075903419218928,	-0.075903419218928,	0.222135796467347,	0.222135796467347,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	-0.0915896937287315,	-0.0915896937287315},
														{	-0.189628909415006,	-0.189628909415006,	-0.483746556473830,	-0.483746556473830,	-0.393550478042457,	-0.393550478042457,	-0.091589693728732,	-0.091589693728732,	0.343704423918327,	0.343704423918327,	0.284880894506563,	0.284880894506563,	0.163312267055582,	0.163312267055582,	0.343704423918327,	0.343704423918327,	0.159390698428131,	0.159390698428131,	-0.322962242748339,	-0.322962242748339,	-0.279824987846379,	-0.279824987846379},
														{	-0.189628909415006,	-0.189628909415006,	-0.483746556473830,	-0.483746556473830,	-0.393550478042457,	-0.393550478042457,	-0.091589693728732,	-0.091589693728732,	0.343704423918327,	0.343704423918327,	0.284880894506563,	0.284880894506563,	0.163312267055582,	0.163312267055582,	0.343704423918327,	0.343704423918327,	0.159390698428131,	0.159390698428131,	-0.322962242748339,	-0.322962242748339,	-0.279824987846379,	-0.279824987846379},
														{	0.014292659212445,	0.014292659212445,	-0.499432830983633,	-0.499432830983633,	-0.468060281964026,	-0.468060281964026,	-0.209236752552261,	-0.209236752552261,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.214292659212445,	0.214292659212445,	0.343704423918327,	0.343704423918327,	-0.122962242748339,	-0.122962242748339,	-0.432766164316967,	-0.432766164316967,	-0.232766164316967,	-0.232766164316967},
														{	0.014292659212445,	0.014292659212445,	-0.499432830983633,	-0.499432830983633,	-0.468060281964026,	-0.468060281964026,	-0.209236752552261,	-0.209236752552261,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.214292659212445,	0.214292659212445,	0.343704423918327,	0.343704423918327,	-0.122962242748339,	-0.122962242748339,	-0.432766164316967,	-0.432766164316967,	-0.232766164316967,	-0.232766164316967},
														{	0.343704423918327,	0.343704423918327,	-0.452374007454222,	-0.452374007454222,	-0.464138713336575,	-0.464138713336575,	-0.307275968238535,	-0.307275968238535,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	-0.303354399611084,	-0.303354399611084,	-0.354334791767947,	-0.354334791767947,	0.328018149408523,	0.328018149408523},
														{	0.343704423918327,	0.343704423918327,	-0.452374007454222,	-0.452374007454222,	-0.464138713336575,	-0.464138713336575,	-0.307275968238535,	-0.307275968238535,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	-0.303354399611084,	-0.303354399611084,	-0.354334791767947,	-0.354334791767947,	0.328018149408523,	0.328018149408523},
														{	0.343704423918327,	0.343704423918327,	0.124096580781072,	0.124096580781072,	-0.417079889807163,	-0.417079889807163,	-0.417079889807163,	-0.417079889807163,	-0.224923027062065,	-0.224923027062065,	-0.181785772160104,	-0.181785772160104,	0.120175012153621,	0.120175012153621,	-0.338648517258143,	-0.338648517258143,	-0.373942634905202,	-0.373942634905202,	0.0339005023496999,	0.0339005023496999,	0.343704423918327,	0.343704423918327},
														{	0.343704423918327,	0.343704423918327,	0.124096580781072,	0.124096580781072,	-0.417079889807163,	-0.417079889807163,	-0.417079889807163,	-0.417079889807163,	-0.224923027062065,	-0.224923027062065,	-0.181785772160104,	-0.181785772160104,	0.120175012153621,	0.120175012153621,	-0.338648517258143,	-0.338648517258143,	-0.373942634905202,	-0.373942634905202,	0.0339005023496999,	0.0339005023496999,	0.343704423918327,	0.343704423918327},
														{	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.261351482741857,	0.261351482741857,	-0.287668125101281,	-0.287668125101281,	-0.417079889807163,	-0.417079889807163,	-0.358256360395398,	-0.358256360395398,	-0.0680602819640256,	-0.0680602819640256,	-0.213158321179712,	-0.213158321179712,	0.280959325879112,	0.280959325879112,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327},
														{	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.261351482741857,	0.261351482741857,	-0.287668125101281,	-0.287668125101281,	-0.417079889807163,	-0.417079889807163,	-0.358256360395398,	-0.358256360395398,	-0.0680602819640256,	-0.0680602819640256,	-0.213158321179712,	-0.213158321179712,	0.280959325879112,	0.280959325879112,	0.343704423918327,	0.343704423918327,	0.343704423918327,	0.343704423918327}	};
					
					
};

DummyImageProcessingPlugin::DummyImageProcessingPlugin()
{
	cout << "Hello World!" << endl;
//Insérez votre code ici
}

DummyImageProcessingPlugin::~DummyImageProcessingPlugin()
{
	cout << "Goodbye Cruel World!" << endl;
//Insérez votre code ici
}

void DummyImageProcessingPlugin::OnImage(const boost::shared_array<uint8_t> in_ptrImage, unsigned int in_unWidth, unsigned int in_unHeight,
		double & out_dXPos, double & out_dYPos)
{
//Insérez votre code ici
	out_dXPos = -1.0;
	out_dYPos = -1.0;

	int cropW = 480;
	int cropH = 480;
	int cropX = 0;
	int cropY = 0;
	int outW = 500;
	int outH = 500;

	float* platNorm = PlateauNormPad(in_ptrImage, in_unWidth , in_unHeight , cropW, cropH, cropX, cropY, outW, outH);

	cout << "red pixel 1 norm: " << platNorm[499] << endl;

	delete platNorm;
}

void DummyImageProcessingPlugin::OnBallPosition(double in_dXPos, double in_dYPos, double & out_dXDiff, double & out_dYDiff)
{
	//insérez votre code ici
	out_dXDiff = 0.0;
	out_dYDiff = 0.0;

}

float* DummyImageProcessingPlugin::PlateauNormPad(const boost::shared_array<uint8_t> in_ptrImage, unsigned int inWidth, unsigned int inHeight, unsigned int cropWidth, unsigned int cropHeight, unsigned int cropX, unsigned int cropY, unsigned int outWidth,unsigned int outHeight)
{
	float* plateauPad = new float[outWidth*outHeight]();
	
	// Checks to make sure we don't try to crop out of bounds
	if(cropX+cropWidth > inWidth)
	{
		cropWidth -= (cropX + cropWidth) - inWidth;
	}
	if(cropY+cropHeight > inHeight)
	{
		cropHeight -= (cropY + cropHeight) - inHeight;
	}
	
	// Copies a subsection of the image, from int8 to float (0.0-1.0) to a new array
	for(int height = 0; height < cropHeight; height++)
	{
		int newColumn = 0;
		for(int oldColumn = 0; oldColumn < cropWidth*3; oldColumn += 3)
		{
			plateauPad[newColumn + outWidth*height] = (float)(in_ptrImage[oldColumn + inWidth*3*height]) / 255.0;
			newColumn++;
		}
	}
	
	return plateauPad;
}






//ne rien modifier passé ce commentaire
//ne rien modifier passé ce commentaire
//ne rien modifier passé ce commentaire
//ne rien modifier passé ce commentaire
//ne rien modifier passé ce commentaire
//ne rien modifier passé ce commentaire
//ne rien modifier passé ce commentaire
//ne rien modifier passé ce commentaire

extern "C"
{
	ImageProcessingPlugin * Load();
	void Unload( ImageProcessingPlugin * in_pPlugin );
}

void Unload( ImageProcessingPlugin * in_pPlugin )
{
	delete in_pPlugin;
}

ImageProcessingPlugin * Load()
{
	//si vous changez le nom de la classe asssurez-vous de le changer aussi ci-dessous
	return new DummyImageProcessingPlugin;
}
